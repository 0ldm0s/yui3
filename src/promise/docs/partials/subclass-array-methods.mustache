// Y.Array.each does not return an array, so we return nothing
ArrayPromise.prototype.each = function (fn, thisObj) {
    this.then(function (array) {
        Y.Array.each(array, fn, thisObj);
    });
};

// Y.Array.map returns a new array, so we return the result of this.then()
ArrayPromise.prototype.map = function (fn, thisObj) {
    return this.then(function (array) {
        // By returning the result of Y.Array.map we are returning a new promise
        // representing the new array
        return Y.Array.map(array, fn, thisObj);
    });
};

// Y.Array.filter follows the same pattern as Y.Array.map
ArrayPromise.prototype.filter = function (fn, thisObj) {
    return this.then(function (array) {
        return Y.Array.filter(array, fn, thisObj);
    });
};
