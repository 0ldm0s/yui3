<script type="text/javascript">
YUI().use( "datatable-sort", "datatable-scroll", "cssbutton", function (Y) {

    var ports = [
        { port:20,  pname:'FTP_data',ptitle:'File Transfer Process Data' },
        { port:21,  pname:'FTP',     ptitle:'File Transfer Process' },
        { port:22,  pname:'SSH',     ptitle:'Secure Shell' },
        { port:23,  pname:'TELNET',  ptitle:'Telnet remote communications' },
        { port:25,  pname:'SMTP',    ptitle:'Simple Mail Transfer Protocol' },
        { port:43,  pname:'WHOIS',   ptitle:'whois Identification' },
        { port:53,  pname:'DNS',     ptitle:'Domain Name Service' },
        { port:68,  pname:'DHCP',    ptitle:'Dynamic Host Control Protocol' },
        { port:79,  pname:'FINGER',  ptitle:'Finger Identification' },
        { port:80,  pname:'HTTP',    ptitle:'HyperText Transfer Protocol' },
        { port:110, pname:'POP3',   ptitle:'Post Office Protocol v3' },
        { port:115, pname:'SFTP',   ptitle:'Secure File Transfer Protocol' },
        { port:119, pname:'NNTP',   ptitle:'Network New Transfer Protocol' },
        { port:123, pname:'NTP',    ptitle:'Network Time Protocol' },
        { port:139, pname:'NetBIOS',ptitle:'NetBIOS Communication' },
        { port:143, pname:'IMAP',   ptitle:'Internet Message Access Protocol' },
        { port:161, pname:'SNMP',   ptitle:'Simple Network Management Protocol' },
        { port:194, pname:'IRC',    ptitle:'Internet Relay Chat' },
        { port:220, pname:'IMAP3',  ptitle:'Internet Message Access Protocol v3' },
        { port:389, pname:'LDAP',   ptitle:'Lightweight Directory Access Protocol' },
        { port:443, pname:'SSL',    ptitle:'Secure Socket Layer' },
        { port:445, pname:'SMB',    ptitle:'NetBIOS over TCP' },
        { port:993, pname:'SIMAP',  ptitle:'Secure IMAP Mail' },
        { port:995, pname:'SPOP',   ptitle:'Secure POP Mail' }
    ];

    var dt = new Y.DataTable({
        columns : [
            {   key:        'select',
                label:      'Select <input type="checkbox" class="myCheckboxALL" title="Click to toggle ALL records"/>',
                allowHTML:  true,   // must use this if we insert HTML in the label AND the formatter!

                formatter:  function(o) {
                                var chkd = (o.data.select) ? "checked" : "";
                                o.value = '<input type="checkbox" class="myCheckboxFmtr" ' + chkd + '/>';
                                o.className += ' center';
                             }
            },
            {   key:'port',   label:'Port No.' },
            {   key:'pname',  label:'Protocol' },
            {   key:'ptitle', label:'Common Name' }
        ],
        data :      ports,
        scrollable: 'y',
        height:     '300px',
        sortable :  ['port','pname'],
        recordType: {
            select: { value:false },     // a custom property ... defined to allow "checkbox" select to work easily !
            port:{}, pname:{},  ptitle:{}
        }
    }).render("#dtable");


//----------------
//   "checkbox" Click listeners ...
//----------------

// Define a listener on the DT first column for each record's "checkbox",
//   to set the value of `select` to the checkbox setting
    dt.delegate("click",function(e){
        var chk = e.target,
            td  = chk.ancestor(),       // since e.target is on INPUT, parent is the containing TD
            rec = this.getRecord(td);

        rec.set('select', chk.get('checked') );
    },".myCheckboxFmtr", dt);


// Also define a listener on the single TH "checkbox" to
//   toggle all of the checkboxes
    Y.one(".myCheckboxALL").on("click", function(e){
        var chk = e.target.get('checked');
        this.get('data').each(function(item){
            item.set('select',chk);
        });
    },dt);

//----------------
//  CSS-Button click handlers ....
//----------------
    Y.one("#btnSelected").on("click",function(){
        var ml  = this.get('data'),
            msg = '';

        ml.each(function(item){
            if ( item.get('select') )
                msg += "Record index = " + ml.indexOf(item)
                        + ' Data = ' + item.get('port') + ' : ' + item.get('pname') + '<br/>';
        });

        msg = ( msg.length === 0 ) ? 'None selected!' : msg;    // if no selections, null the 'msg' variable

        Y.one("#processed").setContent( msg );

    },dt);

    Y.one("#btnClearSelected").on("click",function(){
        var ml  = this.get('data');

        ml.each(function(item){
            item.set('select',false);
        });
        Y.one("#processed").setContent('Cleared.');

    },dt);

});
</script>
