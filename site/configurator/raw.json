{
	"version": "3.0.0pr1", 
	"modules": {
		"node": {
			"description": "Extended Node interface for managing classNames.", 
			"submodules": [
				"node-screen", 
				"node-style", 
				"node-base"
			], 
			"classlist": [
				"Node", 
				"NodeList"
			], 
			"filelist": [
				"node-screen.js", 
				"node-style.js", 
				"node.js"
			], 
			"subdata": {
				"node-base": {
					"name": "NodeList", 
					"description": "A wrapper for manipulating multiple DOM elements"
				}, 
				"node-style": {
					"name": "Node", 
					"description": "Extended Node interface for managing node styles."
				}, 
				"node-screen": {
					"name": "Node", 
					"description": "Extended Node interface for managing regions and screen positioning.\nAdds support for positioning elements and normalizes window size and scroll detection."
				}
			}, 
			"name": "node"
		}, 
		"queue": {
			"description": "Mechanism to execute a series of callbacks in a non-blocking queue.  Each\ncallback is executed via setTimout unless configured with a negative\ntimeout, in which case it is run in blocking mode in the same execution\nthread as the previous callback.  Callbacks can be function references or\nobject literals with the following keys:\n<ul>\n<li><code>fn</code> - {Function} REQUIRED the callback function.</li>\n<li><code>timeout</code> - {number} millisecond delay to wait after previous callback completion before executing this callback.  Negative values cause immediate blocking execution.  Default 0.</li>\n<li><code>until</code> - {Function} boolean function executed before each iteration.  Return true to indicate callback completion.</li>\n<li><code>iterations</code> - {Number} number of times to execute the callback before proceeding to the next callback in the queue. Incompatible with <code>until</code>.</li>\n</ul>", 
			"submodules": [
			], 
			"classlist": [
				"Queue"
			], 
			"filelist": [
				"Queue.js"
			], 
			"subdata": {
			}, 
			"name": "queue"
		}, 
		"anim": {
			"description": "The Animation Utility provides an API for creating advanced transitions between property values", 
			"submodules": [
				"anim-color", 
				"anim-curve", 
				"anim-easing", 
				"anim-node-plugin", 
				"anim-scroll", 
				"anim-xy"
			], 
			"classlist": [
				"Easing", 
				"Anim"
			], 
			"filelist": [
				"anim-color.js", 
				"anim-curve.js", 
				"anim-easing.js", 
				"anim-node-plugin.js", 
				"anim-scroll.js", 
				"anim-xy.js", 
				"anim.js"
			], 
			"subdata": {
				"anim-node-plugin": {
					"name": "Easing", 
					"description": "Binds an Anim instance to a Node instance"
				}, 
				"anim-scroll": {
					"name": "Anim", 
					"description": "Adds support for the <code>scroll</code> property in <code>to</code>\nand <code>from</code> attributes."
				}, 
				"anim-xy": {
					"name": "Anim", 
					"description": "Adds support for the <code>xy</code> property in <code>from</code> and \n<code>to</code> attributes."
				}, 
				"anim-color": {
					"name": "Anim", 
					"description": "Adds support for color properties in <code>to</code>\nand <code>from</code> attributes."
				}, 
				"anim-curve": {
					"name": "Anim", 
					"description": "Adds support for the <code>curve</code> property for the <code>to</code> \nattribute.  A curve is zero or more control points and an end point."
				}, 
				"anim-easing": {
					"name": "Easing", 
					"description": "The easing module provides methods for customizing\nhow an animation behaves during each run."
				}
			}, 
			"guessedname": "NUM", 
			"guessedtype": "property", 
			"name": "anim"
		}, 
		"dump": {
			"description": "Returns a simple string representation of the object or array.\nOther types of objects will be returned unprocessed.  Arrays\nare expected to be indexed.  Use object notation for\nassociative arrays.\nIf included, the dump method is added to the YUI instance.", 
			"submodules": [
			], 
			"classlist": [
				"YUI~dump"
			], 
			"filelist": [
				"dump.js"
			], 
			"subdata": {
			}, 
			"name": "dump"
		}, 
		"dom": {
			"description": "Adds position and region management functionality to DOM.", 
			"submodules": [
				"dom-screen", 
				"dom-style", 
				"dom-base", 
				"selector"
			], 
			"classlist": [
				"DOM", 
				"Selector"
			], 
			"filelist": [
				"dom-screen.js", 
				"dom-style.js", 
				"dom.js", 
				"selector.js"
			], 
			"subdata": {
				"dom-base": {
					"name": "DOM", 
					"description": "Provides DOM helper methods."
				}, 
				"selector": {
					"name": "Selector", 
					"description": "Provides helper methods for collecting and filtering DOM elements."
				}, 
				"dom-style": {
					"name": "DOM", 
					"description": "Add style management functionality to DOM."
				}, 
				"dom-screen": {
					"name": "DOM", 
					"description": "Adds position and region management functionality to DOM."
				}
			}, 
			"guessedname": "OFFSET_TOP", 
			"guessedtype": "property", 
			"name": "dom"
		}, 
		"attribute": {
			"description": "The Attribute Utility allows you to add attributes to any class through an augmentable Attribute interface. The interface adds get and set methods to your class for attribute access, as well as support for change events that can be used to listen for changes in attribute values.", 
			"submodules": [
			], 
			"classlist": [
				"Attribute", 
				"State"
			], 
			"filelist": [
				"Attribute.js", 
				"State.js"
			], 
			"subdata": {
			}, 
			"guessedname": "O", 
			"guessedtype": "property", 
			"name": "attribute"
		}, 
		"dd": {
			"description": "The Drag & Drop Utility allows you to create a draggable interface efficiently, buffering you from browser-level abnormalities and enabling you to focus on the interesting logic surrounding your particular implementation. This component enables you to create a variety of standard draggable objects with just a few lines of code and then, using its extensive API, add your own specific implementation logic.", 
			"submodules": [
				"dd-constrain", 
				"dd-ddm-base", 
				"dd-ddm-drop", 
				"dd-ddm", 
				"dd-drag", 
				"dd-drop", 
				"dd-proxy"
			], 
			"classlist": [
				"DragConstained", 
				"DDM", 
				"Drag", 
				"Drop", 
				"Proxy"
			], 
			"filelist": [
				"constrain.js", 
				"ddm-base.js", 
				"ddm-drop.js", 
				"ddm.js", 
				"drag.js", 
				"drop.js", 
				"proxy.js"
			], 
			"subdata": {
				"dd-ddm-drop": {
					"name": "DDM", 
					"description": "Extends the dd-ddm Class to add support for the placement of Drop Target shims inside the viewport shim. It also handles all Drop Target related events and interactions."
				}, 
				"dd-constrain": {
					"name": "DragConstained", 
					"description": "This class extends the dd-drag module to add the constraining methods to it. It supports constraining to a region, node or viewport. It also\nsupports tick based moves and XY axis constraints."
				}, 
				"dd-drop": {
					"name": "Drop", 
					"description": "This class provides the ability to create a Drop Target."
				}, 
				"dd-ddm": {
					"name": "DDM", 
					"description": "Extends the dd-ddm-base Class to add support for the viewport shim to allow a draggable node to drag to be dragged over an iframe or any other node that traps mousemove events.\nIt is also required to have Drop Targets enabled, as the viewport shim will contain the shims for the Drop Targets."
				}, 
				"dd-drag": {
					"name": "Drag", 
					"description": "This class provides the ability to drag a Node."
				}, 
				"dd-proxy": {
					"name": "Proxy", 
					"description": "This class extends dd-drag to allow for creating a proxy drag node, instead of dragging the original node."
				}, 
				"dd-ddm-base": {
					"name": "DDM", 
					"description": "Provides the base Drag Drop Manger required for making a Node draggable."
				}
			}, 
			"name": "dd"
		}, 
		"yuitest": {
			"classlist": [
				"ArrayAssert", 
				"Assert", 
				"Assert.Error", 
				"ComparisonFailure", 
				"UnexpectedValue", 
				"ShouldFail", 
				"ShouldError", 
				"UnexpectedError", 
				"DateAssert", 
				"Mock", 
				"ObjectAssert", 
				"Test.Case", 
				"Test.Wait", 
				"Test.Manager", 
				"Test.Reporter", 
				"Test.Runner", 
				"TestNode", 
				"Test.Suite", 
				"UserAction"
			], 
			"subdata": {
			}, 
			"name": "yuitest", 
			"filelist": [
				"ArrayAssert.js", 
				"Assert.js", 
				"DateAssert.js", 
				"Mock.js", 
				"ObjectAssert.js", 
				"TestCase.js", 
				"TestConsoleLogger.js", 
				"TestFormat.js", 
				"TestManager.js", 
				"TestReporter.js", 
				"TestRunner.js", 
				"TestSuite.js", 
				"UserAction.js", 
				"YuiTestRollup.js"
			], 
			"submodules": [
			]
		}, 
		"yui": {
			"description": "YUI core", 
			"submodules": [
				"get", 
				"loader"
			], 
			"classlist": [
				"YUI~array", 
				"Lang", 
				"YUI~object", 
				"UA", 
				"YUI", 
				"Get", 
				"Loader"
			], 
			"filelist": [
				"yui-array.js", 
				"yui-core.js", 
				"yui-dump.js", 
				"yui-init.js", 
				"yui-lang.js", 
				"yui-later.js", 
				"yui-log.js", 
				"yui-object.js", 
				"yui-ua.js", 
				"yui.js", 
				"get.js", 
				"loader.js"
			], 
			"subdata": {
				"loader": {
					"name": "Loader", 
					"description": "Loader dynamically loads script and css files.  It includes the dependency\ninfo for the version of the library in use, and will automatically pull in\ndependencies for the modules requested.  It supports rollup files and will\nautomatically use these when appropriate in order to minimize the number of\nhttp connections required to load all of the dependencies.  It can load the\nfiles from the Yahoo! CDN, and it can utilize the combo service provided on\nthis network to reduce the number of http connections required to download \nYUI files."
				}, 
				"get": {
					"name": "Get", 
					"description": "Fetches and inserts one or more script or link nodes into the document"
				}
			}, 
			"name": "yui"
		}, 
		"json": {
			"description": "The JSON Utility provides methods to serialize JavaScript objects into\nJSON strings and parse JavaScript objects from strings containing JSON data.\nThree modules are available for inclusion:\n<ol>\n<li>1. <code>json-parse</code> for parsing JSON strings into native JavaScript data</li>\n<li>2. <code>json-stringify</code> for stringification of JavaScript objects into JSON strings</li>\n<li>3. <code>json</code> for both parsing and stringification</li>\n</ol>\nBoth <code>json-parse</code> and <code>json-stringify</code> create functions in a static JSON class under your YUI instance (e.g. Y.JSON.parse(..)).", 
			"submodules": [
				"json-parse", 
				"json-stringify"
			], 
			"classlist": [
				"JSON"
			], 
			"filelist": [
				"json-parse.js", 
				"json-stringify.js"
			], 
			"subdata": {
				"json-stringify": {
					"name": "JSON", 
					"description": "Provides Y.JSON.stringify method for converting objects to JSON strings."
				}, 
				"json-parse": {
					"name": "JSON", 
					"description": "Provides Y.JSON.parse method to take JSON strings and return native\nJavaScript objects."
				}
			}, 
			"static": "", 
			"guessedname": "JSON", 
			"guessedtype": "property", 
			"name": "json"
		}, 
		"base": {
			"description": "Provides a common base class for objects requiring\nmanaged attributes and acting as event targets. The foundation class on which user configurable component classes across the YUI library are based.", 
			"submodules": [
			], 
			"classlist": [
				"Base"
			], 
			"filelist": [
				"Base.js"
			], 
			"subdata": {
			}, 
			"guessedname": "L", 
			"guessedtype": "property", 
			"name": "base"
		}, 
		"cookie": {
			"description": "Utilities for cookie management", 
			"submodules": [
			], 
			"classlist": [
				"Cookie"
			], 
			"filelist": [
				"Cookie.js"
			], 
			"subdata": {
			}, 
			"beta": "", 
			"name": "cookie"
		}, 
		"dd-plugin": {
			"description": "This is a simple Drop plugin that can be attached to a Node via the plug method.", 
			"submodules": [
				"dd-drop-plugin", 
				"dd-plugin"
			], 
			"classlist": [
				"DropPlugin", 
				"DragPlugin"
			], 
			"filelist": [
				"dd-drop-plugin.js", 
				"dd-plugin.js"
			], 
			"subdata": {
				"dd-drop-plugin": {
					"name": "DropPlugin", 
					"description": "This is a simple Drop plugin that can be attached to a Node via the plug method."
				}, 
				"dd-plugin": {
					"name": "DragPlugin", 
					"description": "This is a simple Drag plugin that can be attached to a Node via the plug method."
				}
			}, 
			"name": "dd-plugin"
		}, 
		"io": {
			"description": "HTTP communications module.", 
			"submodules": [
			], 
			"classlist": [
				"io"
			], 
			"filelist": [
				"io.js"
			], 
			"subdata": {
			}, 
			"name": "io"
		}, 
		"event": {
			"description": "The YUI event system", 
			"submodules": [
			], 
			"classlist": [
				"Event.Handle", 
				"Event.Custom", 
				"Event.Subscriber", 
				"Do", 
				"Do.Method", 
				"Do.Error", 
				"Do.AlterArgs", 
				"Do.AlterReturn", 
				"Event", 
				"Event.Facade", 
				"Event.Target"
			], 
			"filelist": [
				"event-custom.js", 
				"event-do.js", 
				"event-dom.js", 
				"event-facade.js", 
				"event-ready.js", 
				"event-target.js", 
				"event.js"
			], 
			"subdata": {
			}, 
			"name": "event"
		}, 
		"substitute": {
			"description": "String variable substitution and string formatting.\nIf included, the substitute method is added to the YUI instance.", 
			"submodules": [
			], 
			"classlist": [
				"YUI~substitute"
			], 
			"filelist": [
				"substitute.js"
			], 
			"subdata": {
			}, 
			"name": "substitute"
		}, 
		"oop": {
			"description": "OOP utils.  If included, the OOP methods are added to the YUI instance", 
			"submodules": [
			], 
			"classlist": [
				"YUI~oop"
			], 
			"filelist": [
				"oop.js"
			], 
			"subdata": {
			}, 
			"name": "oop"
		},
        "cssreset" : {
            "description" : "The foundational CSS Reset removes the inconsistent styling of HTML elements provided by browsers. This creates a dependably flat foundation to built upon. With CSS Reset loaded, write explicit CSS your project needs"
        },
        "cssreset-context" : {
            "description" : "This module provides functionality similar to cssrest but can be applied to specific sections (or contexts) in your page"
        },
        "cssfonts" : {
            "description" : "The foundational CSS Fonts provides cross-browser typographical normalization and control while still allowing users to choose and adjust their font size. Both Standards and Quirks modes are supported in A-grade browsers"
        },
        "cssfonts-context" : {
            "description" : "This module provides functionality similar to cssfonts but can be applied to specific sections (or contexts) in your page"
        },
        "cssbase" : {
            "description" : "CSS Base is an optional CSS file that complements YUI's core CSS foundation (CSS Reset, CSS Fonts, and CSS Grids). CSS Base applies a style foundation for HTML elements that is consistent for A-grade browsers"
        },
        "cssbase-context" : {
            "description" : "This module provides functionality similar to cssbase but can be applied to specific sections (or contexts) in your page"
        },
        "cssgrids" : {
            "description" : "The foundational CSS Grids offers four preset page widths, six preset two-column source-order-independent content templates, and the ability to stack and nest subdivided regions of two, three, or four columns. The file provides over 1000 page layout combinations"
        },
        "cssgrids-context" : {
            "description" : "This module provides functionality similar to cssgrids but can be applied to specific sections (or contexts) in your page"
        }
	}
}
