if (typeof __coverage__ === 'undefined') { __coverage__ = {}; }
if (!__coverage__['build/axis-category/axis-category.js']) {
   __coverage__['build/axis-category/axis-category.js'] = {"path":"build/axis-category/axis-category.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":25},"end":{"line":1,"column":44}}},"2":{"name":"(anonymous_2)","line":27,"loc":{"start":{"line":27,"column":21},"end":{"line":28,"column":4}}},"3":{"name":"(anonymous_3)","line":41,"loc":{"start":{"line":41,"column":21},"end":{"line":42,"column":4}}},"4":{"name":"(anonymous_4)","line":60,"loc":{"start":{"line":60,"column":22},"end":{"line":61,"column":4}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":78,"column":62}},"2":{"start":{"line":19,"column":0},"end":{"line":74,"column":3}},"3":{"start":{"line":29,"column":8},"end":{"line":30,"column":28}},"4":{"start":{"line":31,"column":8},"end":{"line":31,"column":21}},"5":{"start":{"line":43,"column":8},"end":{"line":45,"column":30}},"6":{"start":{"line":46,"column":8},"end":{"line":46,"column":21}},"7":{"start":{"line":62,"column":8},"end":{"line":63,"column":36}},"8":{"start":{"line":64,"column":8},"end":{"line":71,"column":9}},"9":{"start":{"line":66,"column":12},"end":{"line":66,"column":38}},"10":{"start":{"line":70,"column":12},"end":{"line":70,"column":28}},"11":{"start":{"line":72,"column":8},"end":{"line":72,"column":21}}},"branchMap":{"1":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":8},"end":{"line":64,"column":8}},{"start":{"line":64,"column":8},"end":{"line":64,"column":8}}]},"2":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":11},"end":{"line":64,"column":20}},{"start":{"line":64,"column":24},"end":{"line":64,"column":48}}]}},"code":["(function () { YUI.add('axis-category', function (Y, NAME) {","","/**"," * Provides functionality for drawing a category axis for use with a chart."," *"," * @module charts"," * @submodule axis-category"," */","/**"," * CategoryAxis draws a category axis for a chart."," *"," * @class CategoryAxis"," * @constructor"," * @extends Axis"," * @uses CategoryImpl"," * @param {Object} config (optional) Configuration parameters."," * @submodule axis-category"," */","Y.CategoryAxis = Y.Base.create(\"categoryAxis\", Y.Axis, [Y.CategoryImpl], {","    /**","     * Returns a string corresponding to the first label on an","     * axis.","     *","     * @method getMinimumValue","     * @return String","     */","    getMinimumValue: function()","    {","        var data = this.get(\"data\"),","            label = data[0];","        return label;","    },","","    /**","     * Returns a string corresponding to the last label on an","     * axis.","     *","     * @method getMaximumValue","     * @return String","     */","    getMaximumValue: function()","    {","        var data = this.get(\"data\"),","            len = data.length - 1,","            label = data[len];","        return label;","    },","","    /**","     * Calculates and returns a value based on the number of labels and the index of","     * the current label.","     *","     * @method _getLabelByIndex","     * @param {Number} i Index of the label.","     * @param {Number} l Total number of labels.","     * @param {String} direction The direction of the axis. (vertical or horizontal)","     * @return String","     * @private","     */","    _getLabelByIndex: function(i, l, direction)","    {","        var label,","            data = this.get(\"data\");","        if(direction && direction === \"vertical\")","        {","            label = data[l - (i + 1)];","        }","        else","        {","            label = data[i];","        }","        return label;","    }","});","","","","}, '@VERSION@', {\"requires\": [\"axis\", \"axis-category-base\"]});","","}());"]};
}
var __cov_5I7GX8nuMNZAAeOsedEb6g = __coverage__['build/axis-category/axis-category.js'];
__cov_5I7GX8nuMNZAAeOsedEb6g.s['1']++;YUI.add('axis-category',function(Y,NAME){__cov_5I7GX8nuMNZAAeOsedEb6g.f['1']++;__cov_5I7GX8nuMNZAAeOsedEb6g.s['2']++;Y.CategoryAxis=Y.Base.create('categoryAxis',Y.Axis,[Y.CategoryImpl],{getMinimumValue:function(){__cov_5I7GX8nuMNZAAeOsedEb6g.f['2']++;__cov_5I7GX8nuMNZAAeOsedEb6g.s['3']++;var data=this.get('data'),label=data[0];__cov_5I7GX8nuMNZAAeOsedEb6g.s['4']++;return label;},getMaximumValue:function(){__cov_5I7GX8nuMNZAAeOsedEb6g.f['3']++;__cov_5I7GX8nuMNZAAeOsedEb6g.s['5']++;var data=this.get('data'),len=data.length-1,label=data[len];__cov_5I7GX8nuMNZAAeOsedEb6g.s['6']++;return label;},_getLabelByIndex:function(i,l,direction){__cov_5I7GX8nuMNZAAeOsedEb6g.f['4']++;__cov_5I7GX8nuMNZAAeOsedEb6g.s['7']++;var label,data=this.get('data');__cov_5I7GX8nuMNZAAeOsedEb6g.s['8']++;if((__cov_5I7GX8nuMNZAAeOsedEb6g.b['2'][0]++,direction)&&(__cov_5I7GX8nuMNZAAeOsedEb6g.b['2'][1]++,direction==='vertical')){__cov_5I7GX8nuMNZAAeOsedEb6g.b['1'][0]++;__cov_5I7GX8nuMNZAAeOsedEb6g.s['9']++;label=data[l-(i+1)];}else{__cov_5I7GX8nuMNZAAeOsedEb6g.b['1'][1]++;__cov_5I7GX8nuMNZAAeOsedEb6g.s['10']++;label=data[i];}__cov_5I7GX8nuMNZAAeOsedEb6g.s['11']++;return label;}});},'@VERSION@',{'requires':['axis','axis-category-base']});
